{"version":3,"sources":["listData/DataItem.js","listData/DataManipulation.js","filterMethod/lowpass.js","filterMethod/Gaussian.js","filterMethod/Decimate.js","App.js","StringToJson/convertToObj.js","serviceWorker.js","index.js","logo.svg"],"names":["DataItem","props","Row","Col","CycleCount","X_force","Y_force","A_distY","B_distY","parseFloat","Processed_DNA_extension","DataManipulation","useState","dataForMan","setDataForMan","useEffect","processedData","data","map","e","DNA_extension","Force","setDataManipulated","filter","isNaN","x","y","setFilter","decimate","setDecimate","gaussianFilter","setGaussianFilter","filterHz","setFilterHz","filterSigma","setFilterSigma","filterKernal","setFilterKernal","decimateVal","setDecimateVal","currVal","dt","cutofffequency","alpha","Math","PI","i","length","Lowpass","err","console","log","kernal","sigma","kernalVal","Error","starting","floor","sqrt","pow","E","arr","eachKernal","j","push","f","reduce","accum","curr","GaussianFilter","parseInt","NaN","Decimate","style","maxHeight","height","Height","Form","Label","Check","className","inline","type","onChange","target","checked","Control","placeholder","disabled","value","overflowY","App","setData","dataManipulated","Container","textAlign","borderStyle","borderRadius","minWidth","borderColor","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","files","dataTransfer","reader","FileReader","onload","result","convertedObj","text","line","split","DataArray","includes","datapt","obj","convertToObj","readAsText","aspectRatio","datasets","label","backgroundColor","width","options","responsive","title","display","tooltips","mode","intersect","hover","maintainAspectRatio","scales","position","scaleLabel","labelString","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.86fd840e.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nexport const DataItem=(props)=>{\n    /**\n     * CycleCount:datapt[0],\n                X_force:datapt[1],\n                Y_force:datapt[2],\n                A_distY:datapt[3],\n                B_distY:datapt[4],\n     */\n    return(\n        <Row>\n            <Col>\n                <p>{props.CycleCount}</p>\n            </Col>\n            <Col>\n                <p>{props.X_force}</p>\n            </Col>\n            <Col>\n                <p>{props.Y_force}</p>\n            </Col>\n            <Col>\n                <p>{props.A_distY}</p>\n            </Col>\n            <Col>\n                <p>{props.B_distY}</p>\n            </Col>\n            <Col>\n                <p>{(parseFloat(props.A_distY)+parseFloat(props.B_distY))/2+(parseFloat(props.Y_force)/0.21)}</p>\n            </Col>\n            <Col>\n                <p>{0-parseFloat(props.Y_force)}</p>\n            </Col>\n            <Col>\n                <p>{props.Processed_DNA_extension}</p>\n            </Col>\n        </Row>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form } from 'react-bootstrap'\nimport { DataItem } from './DataItem'\nimport { GaussianFilter } from '../filterMethod/Gaussian'\nimport { Lowpass } from '../filterMethod/lowpass'\nimport { Decimate } from '../filterMethod/Decimate'\nexport const DataManipulation = (props) => {\n    const [dataForMan, setDataForMan] = useState([])\n    useEffect(() => {\n        var processedData = props.data.map(e => {\n            return {\n                ...e,\n                DNA_extension: (parseFloat(e.A_distY) + parseFloat(e.B_distY)) / 2 + (parseFloat(e.Y_force) / 0.21),\n                Force: 0 - parseFloat(e.Y_force),\n                Processed_DNA_extension: (parseFloat(e.A_distY) + parseFloat(e.B_distY)) / 2 + (parseFloat(e.Y_force) / 0.21)\n            }\n        })\n        setDataForMan(processedData)\n    }, [props.data])\n    useEffect(() => {\n        props.setDataManipulated(dataForMan.filter(e => !isNaN(e.Processed_DNA_extension)).map(e => {\n            return {\n                x: e.Processed_DNA_extension, y: e.Force\n            }\n        }))\n    }, [dataForMan])\n\n    const [filter, setFilter] = useState(false)\n    const [decimate, setDecimate] = useState(false)\n    const [gaussianFilter, setGaussianFilter] = useState(false)\n    const [filterHz, setFilterHz] = useState('10000')\n    const [filterSigma, setFilterSigma] = useState('1')\n    const [filterKernal, setFilterKernal] = useState('3')\n    const [decimateVal, setDecimateVal] = useState('10')\n\n    useEffect(() => {\n        var currVal = dataForMan.map(e => e.DNA_extension)\n        if (filter) {\n            try {\n                currVal = Lowpass(currVal, 0.05, parseFloat(filterHz))\n            } catch (err) {\n                console.log(err)\n            }\n        }\n        if (gaussianFilter) {\n            try {\n                currVal = GaussianFilter(currVal, parseInt(filterKernal), parseFloat(filterSigma))\n            } catch (err) {\n                console.log(err)\n            }\n        }\n        if (decimate) {\n            currVal = Decimate(currVal, parseInt(decimateVal))\n        }\n        setDataForMan(dataForMan.map((e, i) => {\n            return {\n                ...e,\n                Processed_DNA_extension: currVal[i]\n            }\n        }))\n\n    }, [filter, decimate, gaussianFilter, filterHz, filterSigma, filterKernal, decimateVal])\n    return (\n        <div style={{ maxHeight: '100%', height: '100%' }}>\n            <Row style={{ Height: '20%' }}>\n                <Col>\n                    <Form>\n                        <Row>\n                            <Col>\n                                <Form.Label >Low Pass filter(Hz)</Form.Label>\n                                <Form.Check\n                                    className='ml-3'\n                                    inline type={'checkbox'}\n                                    onChange={(e) => {\n                                        console.log(e.target.checked)\n                                        setFilter(e.target.checked)\n                                    }}\n                                ></Form.Check>\n                                <Form.Control type=\"text\" placeholder=\"10000\"\n                                    disabled={!filter}\n                                    onChange={(e) => {\n                                        console.log(e.target.value)\n                                        setFilterHz(e.target.value)\n                                    }}\n                                >\n                                </Form.Control>\n                            </Col>\n                            <Col>\n                                <Form.Label >Gaussian filter(Hz)</Form.Label>\n                                <Form.Check\n                                    className='ml-3'\n                                    inline type={'checkbox'}\n                                    onChange={(e) => {\n                                        console.log(e.target.checked)\n                                        setGaussianFilter(e.target.checked)\n                                    }}\n                                ></Form.Check>\n                                <Form.Control type=\"text\" placeholder=\"kernal Size\"\n                                    disabled={!gaussianFilter}\n                                    onChange={(e) => {\n                                        console.log(e.target.value)\n                                        setFilterKernal(e.target.value)\n                                    }}\n                                >\n                                </Form.Control>\n                                <Form.Control type=\"text\" placeholder=\"sigma\"\n                                    disabled={!gaussianFilter}\n                                    onChange={(e) => {\n                                        console.log(e.target.value)\n                                        setFilterSigma(e.target.value)\n                                    }}\n                                >\n                                </Form.Control>\n                            </Col>\n                            <Col>\n                                <Form.Label >decimate</Form.Label>\n                                <Form.Check className='ml-3'\n                                    inline type={'checkbox'}\n                                    onChange={(e) => {\n                                        console.log(e.target.checked)\n                                        setDecimate(e.target.checked)\n                                    }}\n                                ></Form.Check>\n                                <Form.Control type=\"text\" placeholder=\"10\"\n                                    disabled={!decimate}\n                                    onChange={(e) => {\n                                        console.log(e.target.value)\n                                        setDecimateVal(e.target.value)\n                                    }}>\n\n                                </Form.Control>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Col>\n            </Row>\n            <Row style={{ overflowY: 'scroll', maxHeight: '80%' }}>\n                <Col >\n                    {/**\n     * CycleCount:datapt[0],\n                X_force:datapt[1],\n                Y_force:datapt[2],\n                A_distY:datapt[3],\n                B_distY:datapt[4],\n                */}\n                    {dataForMan.map((e) => {\n                        return (<DataItem CycleCount={e.CycleCount} X_force={e.X_force} Y_force={e.Y_force} A_distY={e.A_distY} B_distY={e.B_distY} Processed_DNA_extension={e.Processed_DNA_extension} />)\n                    })}\n                </Col>\n            </Row>\n        </div>\n    )\n}","/**\n * // Return RC low-pass filter output samples, given input samples,\n// time interval dt, and time constant RC\nfunction lowpass(real[0..n] x, real dt, real RC)\n    var real[0..n] y\n    var real α := dt / (RC + dt)\n    y[0] := α * x[0]\n    for i from 1 to n\n        y[i] := α * x[i] + (1-α) * y[i-1]\n    return y\n */\nexport const Lowpass=(data, dt, cutofffequency)=>{\n    var y=[]\n    var RC=1/(cutofffequency/2*Math.PI)\n    var alpha = dt/(RC+dt)\n    y[0]=data[0]*alpha\n    for(var i=1;i<data.length;i++){\n        y[i]=alpha*data[i]+(1-alpha)*y[i-1]\n    }\n    return y\n}","export const GaussianFilter=(data,kernal,sigma)=>{\n    var kernalVal=[]\n    console.log(kernal,sigma)\n    if(kernal%2==0){\n        console.log(kernal)\n        console.log(kernal%2)\n        throw new Error('cannot be even kernal size')\n    }\n    var starting = -Math.floor(kernal/2)\n    for(var i=0;i<kernal;i++, starting++){\n        kernalVal[i]=(1/Math.sqrt(2*Math.PI*sigma))*Math.pow(Math.E,(-((starting*starting)/(2*sigma*sigma))))\n    }\n    console.log(kernalVal)\n    var ReadyForKernal=data.map((e,i,arr)=>{\n        var eachKernal=[]\n        for(var j=0;j<kernal;j++){\n            if(i+j-Math.floor(kernal/2)<0){\n                \n            }else if(i+j-Math.floor(kernal/2)>=arr.length){\n                eachKernal.push(0)\n            }else{\n                eachKernal.push(arr[i+j-Math.floor(kernal/2)])\n            } \n        }\n        return eachKernal\n    })\n    return ReadyForKernal.map(e=>{\n        return e.map((f,i)=>{\n            return f*kernalVal[i]\n        }).reduce((accum,curr)=>{\n            return accum+=curr\n        },0)\n    })\n}","export const Decimate=(data,decimate)=>{\n    return data.map((e,i)=>{\n        if(i%decimate==0){\n            return NaN\n        }else{\n            return e\n        }\n    })\n}","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { convertToObj } from './StringToJson/convertToObj'\nimport { Scatter } from 'react-chartjs-2';\nimport { DataManipulation } from './listData/DataManipulation';\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [dataManipulated,setDataManipulated] = useState([])\n  const dragOver = (e) => {\n    e.preventDefault();\n  }\n  const dragEnter = (e) => {\n    e.preventDefault();\n  }\n  const dragLeave = (e) => {\n    e.preventDefault();\n  }\n  const fileDrop = (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    console.log(files);\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      console.log(e.target.result)\n      var convertedObj = convertToObj(e.target.result)\n      console.log(convertedObj)\n      setData(convertedObj)\n    }\n    reader.readAsText(files[files.length - 1])\n\n  }\n  return (\n    <div className=\"App bg-dark\">\n      {/**    \n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>*/}\n\n      <Container>\n        <Row className='bg-light'>{/**this is for input the data and general description */}\n          <Col>\n            <Row>\n              <Col>\n                <h1 style={{ textAlign: 'start' }} className='text-dark'>LIFS 5070 hw2 tools</h1>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <h4 style={{ textAlign: 'start' }} className='text-secondary'>Create by Dr_EdwardPCB</h4>\n              </Col>\n            </Row>\n            <hr />\n            <Row>\n              <Col>\n                <h6 style={{ textAlign: 'start' }} className='text-dark'>Description</h6>\n                <p>The course LIFS 5070 in the Yr2020 fall semester require us to do homework provide by each instructor for every topics. The homework provide by Dr.ISHIBASHI toyotaka requires us to carryout data analysis on the prerunned optical tweezer and plot a DNA profile. and here is why this tools arise to help to finish the homwork</p>\n              </Col>\n              <Col>\n                <h6 style={{ textAlign: 'start' }} className='text-dark'>Instruction</h6>\n                <p>Simply drag the file into the drop zone and select the filter and decimate and the result will be plot at the lower part </p>\n              </Col>\n            </Row>\n            <hr />\n            <Row>\n              <Col>\n                <div style={{ borderStyle: \"dashed\", borderRadius: '10px', minWidth: '100%', borderColor: '#999999', height: '100%' }}\n                  onDragOver={dragOver}\n                  onDragEnter={dragEnter}\n                  onDragLeave={dragLeave}\n                  onDrop={fileDrop}\n                >\n                  <h3 className='text-muted'>drag here</h3>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row style={{ height: '50vh' }} className='bg-white'>{/**this is for data filtering and disamate */}\n          <Col style={{maxHeight:'100%', height:'100%'}}>\n            <DataManipulation data={data} setDataManipulated={setDataManipulated}/>\n          </Col>\n        </Row>\n        <Row style={{ height: '100vh', aspectRatio: 1 }} className='bg-light'>{/** this is for plotting the data whenever there are changes */}\n          <Col>\n            <Scatter\n              data={{\n                datasets: [{\n                  label: 'Nucleosome pulling dataset',\n                  borderColor:'#ff9911',\n                  backgroundColor: '#ff9911',\n                  data: dataManipulated.map(e=>{return{\n                    x:e.x,\n                    y:e.y\n                  }})\n                },]\n              }}\n              width={'100%'}\n              height={'100%'}\n              options={{\n                responsive: true,\n                    title: {\n                      display: true,\n                      text: 'nucleosome pulling data'\n                    },\n                    tooltips: {\n                      mode: 'index',\n                      intersect: false,\n                    },\n                    hover: {\n                      mode: 'nearest',\n                      intersect: true\n                    },\n                    maintainAspectRatio: false,\n                    scales: {\n                      x: {\n                        display: true,\n                        position: 'bottom',\n                        scaleLabel: {\n                          display: true,\n                          labelString: 'DNA extension(nm)'\n                        }\n                      },\n                      y: {\n                        display: true,\n                        position: 'right',\n                        scaleLabel: {\n                          display: true,\n                          labelString: 'force(pN)'\n                        }\n                      }\n                    }\n              }}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","export const convertToObj=(text)=>{\n    var line=text.split(\"\\n\")\n    console.log(line)\n    var DataArray=[]\n    for(var i=0;i<line.length;i++){\n        if(line[i].includes(\"#Begin Write\")){\n            continue;\n        }else if(line[i].includes(\"X_force\")){\n            continue;\n        }else if(line[i].includes(\"#End Write\")){\n            break;\n        }else{\n            var datapt=line[i].split('\\t')\n            var obj={\n                //CycleCount/n\tX_force\tY_force\tA_dist-Y\tB_dist-Y\tStatus\n                CycleCount:datapt[0],\n                X_force:datapt[1],\n                Y_force:datapt[2],\n                A_distY:datapt[3],\n                B_distY:datapt[4],\n            }\n            DataArray.push(obj)\n        }\n    }\n    return DataArray\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}